{"remainingRequest":"/Volumes/Code/Graduation_Design/university_student_computer_design_competition_website/FrontEnd/node_modules/vue-loader/lib/index.js??vue-loader-options!/Volumes/Code/Graduation_Design/university_student_computer_design_competition_website/FrontEnd/src/views/layout/Main/Publish/MessageOrScore/Message.vue?vue&type=style&index=0&id=464c762b&scoped=true&lang=css&","dependencies":[{"path":"/Volumes/Code/Graduation_Design/university_student_computer_design_competition_website/FrontEnd/src/views/layout/Main/Publish/MessageOrScore/Message.vue","mtime":1644938683550},{"path":"/Volumes/Code/Graduation_Design/university_student_computer_design_competition_website/FrontEnd/node_modules/css-loader/dist/cjs.js","mtime":1642048410000},{"path":"/Volumes/Code/Graduation_Design/university_student_computer_design_competition_website/FrontEnd/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":1642048410000},{"path":"/Volumes/Code/Graduation_Design/university_student_computer_design_competition_website/FrontEnd/node_modules/postcss-loader/src/index.js","mtime":1642048410000},{"path":"/Volumes/Code/Graduation_Design/university_student_computer_design_competition_website/FrontEnd/node_modules/cache-loader/dist/cjs.js","mtime":1642048410000},{"path":"/Volumes/Code/Graduation_Design/university_student_computer_design_competition_website/FrontEnd/node_modules/vue-loader/lib/index.js","mtime":1642048410000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKaW5wdXQuZWwtaW5wdXRfX2lubmVyIHsKICBwYWRkaW5nLXJpZ2h0OiA0OHB4ICFpbXBvcnRhbnQ7Cn0K"},{"version":3,"sources":["Message.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA8HA;AACA;AACA","file":"Message.vue","sourceRoot":"src/views/layout/Main/Publish/MessageOrScore","sourcesContent":["<template>\n  <div>\n    <el-row :gutter=\"20\">\n      <el-col :span=\"12\" :offset=\"4\">\n        <el-card>\n          <div slot=\"header\" class=\"clearfix\">\n            <span style=\"line-height: 28px;font-size: 20px\">发送消息请先选中</span>\n            <el-button style=\"float: right\" size=\"mini\" type=\"primary\" round @click=\"$router.push('/publish/select')\">\n              返回\n            </el-button>\n          </div>\n          <el-table :data=\"data\" @selection-change=\"handleSelectionChange\" fit>\n            <el-table-column type=\"selection\"></el-table-column>\n            <el-table-column prop=\"name\" label=\"姓名\" align=\"center\"></el-table-column>\n            <el-table-column prop=\"school\" label=\"学校\" align=\"center\"></el-table-column>\n            <el-table-column prop=\"phone\" label=\"手机号\" align=\"center\"></el-table-column>\n            <el-table-column prop=\"state\" label=\"评审状态\" align=\"center\">\n              <template v-slot=\"scope\">\n                <el-tag :type=\"scope.row.state ? 'danger' : 'success'\" disable-transitions>\n                  {{ scope.row.state ? '已评审' : '未评审' }}\n                </el-tag>\n              </template>\n            </el-table-column>\n            <el-table-column fixed=\"right\" label=\"操作\" width=\"100%\" align=\"center\">\n              <template v-slot=\"scope\">\n                <el-button type=\"text\" size=\"small\" @click=\"go(scope.row)\">\n                  {{ scope.row.state ? '查看' : '评审' }}\n                </el-button>\n              </template>\n            </el-table-column>\n          </el-table>\n        </el-card>\n      </el-col>\n      <el-col :span=\"4\">\n        <el-card>\n          <div slot=\"header\" class=\"clearfix\">\n            <span style=\"line-height: 28px;font-size: 20px\">发送消息</span>\n          </div>\n          <el-form label-position=\"top\">\n            <el-form-item label=\"标题\" prop=\"title\">\n              <el-input placeholder=\"请输入标题\" v-model=\"title\" maxlength=\"20\" show-word-limit\n                        :rules=\"[{ required: true, message: '标题不能为空'}]\"></el-input>\n            </el-form-item>\n            <el-form-item label=\"内容\" prop=\"text\">\n              <el-input type=\"textarea\" :rows=\"5\" placeholder=\"请输入内容\" v-model=\"text\"\n                        :rules=\"[{ required: true, message: '内容不能为空'}]\"></el-input>\n            </el-form-item>\n            <el-form-item style=\"float: right\">\n              <el-button type=\"primary\" round @click=\"send\">发送</el-button>\n            </el-form-item>\n          </el-form>\n        </el-card>\n      </el-col>\n    </el-row>\n  </div>\n</template>\n\n<script>\nimport {getRequest, postRequest} from \"@/utils/api\";\n\nexport default {\n  name: \"Message\",\n  data() {\n    return {\n      params: {},\n      // contestId:'',\n      // contestTitle:'',\n      data: [],\n      multipleSelection: [],\n      title: '',\n      text: ''\n    }\n  },\n  mounted() {\n    this.params = this.$route.params;\n    console.log(this.params);\n    getRequest(\"/scores/users\", {cid: this.params.contestId}).then((res) => {\n      this.data = res.data.data;\n      // console.log(res.data.data)\n    })\n  },\n  methods: {\n    handleSelectionChange(val) {\n      this.multipleSelection = [];\n      const sender = sessionStorage.uid;\n      val.forEach((val) => {\n        this.multipleSelection.push({recipient: val.userId, sender: sender});\n      });\n      // console.log(this.multipleSelection);\n    },\n    send() {\n      let length = this.multipleSelection.length\n      if (length && this.title.trim() !== '' && this.text.trim() !== '') {\n        for (let i = 0; i < length; i++) {\n          this.$set(this.multipleSelection[i], 'title', this.title);\n          this.$set(this.multipleSelection[i], 'text', this.text);\n        }\n        // console.log(this.multipleSelection);\n        postRequest(\"/messages/save\", this.multipleSelection).then((res) => {\n          console.log(res.data.data);\n          if (res.data.data) {\n            this.$message.success(\"发送成功。\")\n          } else {\n            this.$message.error(\"发送失败！\")\n          }\n        });\n      } else {\n        this.$message.warning(\"请在左侧勾选学生或检测标题内容是否为空！\")\n      }\n    },\n    go(data) {\n      // console.log(data);\n      this.params.name = data.name;\n      this.params.scoresId = data.scoresId;\n      this.params.phone = data.phone;\n      this.params.school = data.school;\n      this.params.userId = data.userId;\n      this.params.state = data.state;\n      // console.log(this.params);\n      this.$router.push({name: 'publish-score', params: this.params})\n    }\n  }\n}\n</script>\n\n<style scoped>\ninput.el-input__inner {\n  padding-right: 48px !important;\n}\n</style>"]}]}