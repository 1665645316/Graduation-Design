{"remainingRequest":"/Volumes/Code/Graduation_Design/university_student_computer_design_competition_website/FrontEnd/node_modules/vue-loader/lib/index.js??vue-loader-options!/Volumes/Code/Graduation_Design/university_student_computer_design_competition_website/FrontEnd/src/views/register.vue?vue&type=style&index=0&id=77453986&scoped=true&lang=css&","dependencies":[{"path":"/Volumes/Code/Graduation_Design/university_student_computer_design_competition_website/FrontEnd/src/views/register.vue","mtime":1642491533410},{"path":"/Volumes/Code/Graduation_Design/university_student_computer_design_competition_website/FrontEnd/node_modules/css-loader/dist/cjs.js","mtime":1642048409600},{"path":"/Volumes/Code/Graduation_Design/university_student_computer_design_competition_website/FrontEnd/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":1642048409940},{"path":"/Volumes/Code/Graduation_Design/university_student_computer_design_competition_website/FrontEnd/node_modules/postcss-loader/src/index.js","mtime":1642048409590},{"path":"/Volumes/Code/Graduation_Design/university_student_computer_design_competition_website/FrontEnd/node_modules/cache-loader/dist/cjs.js","mtime":1642048408770},{"path":"/Volumes/Code/Graduation_Design/university_student_computer_design_competition_website/FrontEnd/node_modules/vue-loader/lib/index.js","mtime":1642048409780}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoucmVnaXN0ZXJDb250YWluZXIgewogIGJvcmRlci1yYWRpdXM6IDE1cHg7CiAgYmFja2dyb3VuZC1jbGlwOiBwYWRkaW5nLWJveDsKICBtYXJnaW46IDIwMHB4IGF1dG87CiAgd2lkdGg6IDM1MHB4OwogIHBhZGRpbmc6IDE1cHggMzVweDsKICBiYWNrZ3JvdW5kOiAjZmZmOwogIGJvcmRlcjogMXB4IHNvbGlkICNlZWVlZWU7CiAgYm94LXNoYWRvdzogMCAwIDI1cHggI2NhYzZjNjsKfQoKLmJ0biB7CiAgbWFyZ2luLXRvcDogMTBweDsKICB0ZXh0LWFsaWduOiBjZW50ZXI7Cn0KCi5yYWRpb0wgewogIG1hcmdpbi1yaWdodDogMTBweDsKICB0ZXh0LWFsaWduOiBjZW50ZXI7CiAgd2lkdGg6IDE2NXB4Owp9CgoucmFkaW9SIHsKICBtYXJnaW4tbGVmdDogMTBweDsKICBtYXJnaW4tcmlnaHQ6IDA7CiAgdGV4dC1hbGlnbjogY2VudGVyOwogIHdpZHRoOiAxNjVweDsKfQouZWwtZm9ybS1pdGVtIGxhYmVsewogIG1hcmdpbi1ib3R0b206IDA7Cn0KCg=="},{"version":3,"sources":["register.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAuNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"register.vue","sourceRoot":"src/views","sourcesContent":["<template>\n  <div>\n    <!-- 注册表单 -->\n    <el-form :rules=\"rules\" ref=\"registerForm\" :model=\"registerForm\" class=\"registerContainer\" label-position=\"top\">\n      <!-- logo-->\n      <img src=\"../assets/image.png\" alt=\"\"/>\n      <el-tabs v-model=\"active.toString()\" stretch>\n        <!-- 第一步-->\n        <el-tab-pane label=\"注册账号\" name=\"0\" disabled>\n          <!-- 姓名 -->\n          <el-form-item prop=\"name\" label=\"姓名：\">\n            <el-input prefix-icon=\"fa fa-user-graduate\" v-model=\"registerForm.name\"></el-input>\n          </el-form-item>\n          <!-- 输入用户手机号 -->\n          <el-form-item prop=\"phone\" label=\"手机号：\">\n            <el-input prefix-icon=\"fa-solid fa-phone\" v-model=\"registerForm.phone\"></el-input>\n          </el-form-item>\n          <!-- 输入用户邮箱 -->\n          <el-form-item prop=\"email\" label=\"邮箱：\">\n            <el-input prefix-icon=\"fa fa-envelope\" v-model=\"registerForm.email\"></el-input>\n          </el-form-item>\n          <!-- 输入用户密码 -->\n          <el-form-item prop=\"password\" label=\"密码：\">\n            <el-input prefix-icon=\"fa fa-unlock-keyhole\" v-model=\"registerForm.password\" show-password></el-input>\n          </el-form-item>\n        </el-tab-pane>\n\n        <!-- 第二步-->\n        <el-tab-pane label=\"输入信息\" name=\"1\" disabled>\n          <!-- 学校 -->\n          <el-form-item prop=\"school\" label=\"学校：\">\n            <el-input prefix-icon=\"fa fa-university\" v-model=\"registerForm.school\"></el-input>\n          </el-form-item>\n          <!-- 性别 -->\n          <el-form-item prop=\"sex\" label=\"性别：\">\n            <el-radio class=\"radioL\" v-model=\"registerForm.sex\" label=\"1\" border>男</el-radio>\n            <el-radio class=\"radioR\" v-model=\"registerForm.sex\" label=\"0\" border>女</el-radio>\n          </el-form-item>\n          <!-- 出生年月日 -->\n          <el-form-item prop=\"birthday\" label=\"生日：\">\n            <el-date-picker v-model=\"registerForm.birthday\" type=\"date\" placeholder=\"选择日期\" format=\"yyyy 年 MM 月 dd 日\"\n                            prefix-icon=\"fa fa-calendar-days\" value-format=\"yyyy-MM-dd\"\n                            style=\"width: 100%\"></el-date-picker>\n          </el-form-item>\n          <!-- 地址 -->\n          <el-form-item prop=\"address\" label=\"地址：\">\n            <el-input prefix-icon=\"fa fa-map-marker\" v-model=\"registerForm.address\"></el-input>\n          </el-form-item>\n        </el-tab-pane>\n        <!-- 第三步-->\n        <el-tab-pane name=\"2\" disabled style=\"text-align: center;\" label=\"选择身份\">\n          <!-- 选择用户身份 -->\n          <el-form-item label=\"选择身份:\">\n            <el-select v-model=\"registerForm.groupId\" placeholder=\"请选身份\" style=\"width: 100%\">\n              <el-option v-for=\"item in groups\" :key=\"item.value\" :label=\"item.groupName\"\n                         :value=\"item.value\"></el-option>\n            </el-select>\n          </el-form-item>\n          <el-button @click=\"submitForm\" class=\"submit\" style=\"margin-bottom: 50px;\">提&nbsp;&nbsp;&nbsp;&nbsp;交\n          </el-button>\n        </el-tab-pane>\n      </el-tabs>\n      <el-steps :active=\"active\" align-center>\n        <el-step title=\"第一步\"></el-step>\n        <el-step title=\"第二步\"></el-step>\n        <el-step title=\"完成\"></el-step>\n      </el-steps>\n      <div class=\"btn\">\n        <el-button v-if=\"active!==2\" @click=\"next()\" class=\"lastBtn\">下一步</el-button>\n      </div>\n      <el-row>\n        <el-link type=\"primary\" @click=\"goToLoginPage\" style=\"float:right;padding: 10px 0 5px 0;\">已有账号，点击登录</el-link>\n      </el-row>\n    </el-form>\n  </div>\n</template>\n\n<script>\nimport {getRequest, postRequest, putRequest} from \"@/utils/api\";\n\nexport default {\n  name: \"register\",\n  data() {\n    return {\n      // activeName: '1',//控制tabs\n      active: 0,//控制步骤\n      registerForm: {//提交的表单信息\n        phone: '',\n        email: '',\n        password: '',\n        name: '',\n        sex: '',\n        birthday: '',\n        school: '',\n        address: '',\n        groupId: '',\n      },\n      rules: {//form表单校验\n        name: [{required: true, message: \"姓名不能为空\", trigger: \"blur\"},],\n        phone: [{required: true, message: \"电话不能为空\", trigger: \"blur\"},],\n        email: [{required: true, message: \"邮箱不能为空\", trigger: \"blur\"},],\n        password: [{required: true, message: \"密码不能为空\", trigger: \"blur\"},]\n      },\n      value: '',//默认选择学生\n      groups: [//多选框选项\n        {groupName: \"学生\", value: 0},\n        {groupName: \"老师\", value: 1}\n      ]\n    };\n  },\n  watch: {\n    // 点击步骤按钮，标签页步骤跟着联动\n    active() {\n    },\n    // 监视选择选择的身份，如果选择为老师则执行\n    'registerForm.groupId': {\n      handler() {\n        if (this.registerForm.groupId) {\n          this.$prompt('请输入5为组编码', '加入或创建组', {\n            confirmButtonText: '确定',\n            cancelButtonText: '取消',\n            inputPattern: /^[0-9A-Za-z]{5}$/,\n            inputErrorMessage: '编码格式不正确'\n          }).then(({value}) => {\n            //去数据库搜索输入的编码是否存在 groupId JSON.stringify(\n            getRequest(\"/api/encoding/\" + value.toUpperCase()).then((resp) => {\n              console.log(resp.data.data)\n              if (resp.data.data) {\n                //拿到组id，更新数据库 resp.data.data[0].groupId\n                this.$message({type: 'success', message: '加入组'});\n              } else {\n                this.$message({type: 'success', message: '创建组'});\n              }\n            });\n\n          }).catch(() => {\n            this.$message({\n              type: 'info',\n              message: '取消输入'\n            });\n          });\n        }\n\n      }\n    }\n  },\n  methods: {\n    // handleClick() { // 点击标签页，步骤跟着联动\n    //   this.active = Number(this.activeName) - 1;\n    // },\n    next() { // 下一步\n      this.$refs.registerForm.validate((valid) => {\n        if (valid) {\n          this.active += 1;\n          switch (this.active) {\n            case 0:\n              //postRequest(/user/)\n              break;\n            case 1:\n              this.rules = {//form表单校验\n                school: [{required: true, message: \"学校不能为空\", trigger: \"blur\"},],\n                sex: [{required: true, message: \"性别不能为空\", trigger: \"blur\"},],\n                birthday: [{required: true, message: \"生日不能为空\", trigger: \"blur\"},],\n                address: [{required: true, message: \"地址不能为空\", trigger: \"blur\"},]\n              }\n              break;\n            case 2:\n              this.rules = {//form表单校验\n                groupId: [{required: true, message: \"\", trigger: \"blur\"},]\n              }\n          }\n        } else {\n          this.$message.error(\"请输入完整再进行下一步吧！\");\n        }\n      });\n    },\n    submitForm() {\n\n      // this.$refs[formName].validate(async (valid) => {\n      //   if (!valid) return console.log(\"error valid\");\n      //   this.$http\n      //       .post(\"/users/register\", this.form)\n      //       .then((result) => {\n      //         console.log(result);\n      //         if (result.data.code !== 200)\n      //           return this.$message.error(\"注册失败\");\n      //         this.$message.success(\"注册成功\");\n      //         // window.sessionStorage.setItem('token', result.data.token)\n      //         this.$router.push(\"/users/login\");\n      //       })\n      //       .catch((error) => {\n      //         // 【务必注意】这里的error输出的不是一个对象【error.response才是一个对象】\n      //         console.log(error);\n      //         if (error.response) {\n      //           // 请求已发出，但服务器响应的状态码不在 2xx 范围内\n      //           console.log(error.response.data);\n      //           console.log(error.response.status);\n      //           console.log(error.response.headers);\n      //         } else {\n      //           // Something happened in setting up the request that triggered an Error\n      //           console.log(\"Error\", error.message);\n      //         }\n      //         console.log(error.config);\n      //       });\n      // });\n    },\n    goToLoginPage() {\n      this.$router.push(\"/login\");\n    },\n  },\n};\n\n</script>\n\n<style scoped>\n.registerContainer {\n  border-radius: 15px;\n  background-clip: padding-box;\n  margin: 200px auto;\n  width: 350px;\n  padding: 15px 35px;\n  background: #fff;\n  border: 1px solid #eeeeee;\n  box-shadow: 0 0 25px #cac6c6;\n}\n\n.btn {\n  margin-top: 10px;\n  text-align: center;\n}\n\n.radioL {\n  margin-right: 10px;\n  text-align: center;\n  width: 165px;\n}\n\n.radioR {\n  margin-left: 10px;\n  margin-right: 0;\n  text-align: center;\n  width: 165px;\n}\n.el-form-item label{\n  margin-bottom: 0;\n}\n\n</style>"]}]}