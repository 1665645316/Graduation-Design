{"remainingRequest":"/Volumes/Code/Graduation_Design/university_student_computer_design_competition_website/FrontEnd/node_modules/vue-loader/lib/index.js??vue-loader-options!/Volumes/Code/Graduation_Design/university_student_computer_design_competition_website/FrontEnd/src/views/layout/Main/Publish/MessageOrScore/index.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Volumes/Code/Graduation_Design/university_student_computer_design_competition_website/FrontEnd/src/views/layout/Main/Publish/MessageOrScore/index.vue","mtime":1646133582650},{"path":"/Volumes/Code/Graduation_Design/university_student_computer_design_competition_website/FrontEnd/node_modules/cache-loader/dist/cjs.js","mtime":1642048410000},{"path":"/Volumes/Code/Graduation_Design/university_student_computer_design_competition_website/FrontEnd/node_modules/babel-loader/lib/index.js","mtime":1642048410000},{"path":"/Volumes/Code/Graduation_Design/university_student_computer_design_competition_website/FrontEnd/node_modules/cache-loader/dist/cjs.js","mtime":1642048410000},{"path":"/Volumes/Code/Graduation_Design/university_student_computer_design_competition_website/FrontEnd/node_modules/vue-loader/lib/index.js","mtime":1642048410000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCB7Z2V0UmVxdWVzdH0gZnJvbSAiQC91dGlscy9hcGkiOwoKZXhwb3J0IGRlZmF1bHQgewogIG5hbWU6ICJNZXNzYWdlT3JTY29yZSIsCiAgZGF0YSgpIHsKICAgIHJldHVybiB7CiAgICAgIGRhdGE6IFtdLAogICAgfQogIH0sCiAgY29tcHV0ZWQ6IHsKICAgIGlzTG9naW4oKSB7CiAgICAgIGNvbnNvbGUubG9nKCLmiafooYzkuoYiKQogICAgICByZXR1cm4gdGhpcy4kc3RvcmUuc3RhdGUuZ2lkOwogICAgfQogIH0sCiAgd2F0Y2g6IHsKICAgIGlzTG9naW4oKSB7CiAgICAgIHRoaXMuZ2V0Q29udGVzdHMoKTsKICAgIH0KCiAgfSwKICBtZXRob2RzOiB7CiAgICBnZXRDb250ZXN0cygpIHsKICAgICAgZ2V0UmVxdWVzdCgiL2NvbnRlc3RzL2dpZCIsIHtnaWQ6IHRoaXMuJHN0b3JlLnN0YXRlLmdpZH0pLnRoZW4oKHJlcykgPT4gewogICAgICAgIHRoaXMuZGF0YSA9IHJlcy5kYXRhLmRhdGE7CiAgICAgIH0pCiAgICB9CiAgfQp9Cg=="},{"version":3,"sources":["index.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAkCA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"index.vue","sourceRoot":"src/views/layout/Main/Publish/MessageOrScore","sourcesContent":["<template>\n  <div>\n    <el-row :gutter=\"20\">\n      <el-col :span=\"16\" :offset=\"4\">\n        <el-card>\n          <div slot=\"header\" class=\"clearfix\">\n            <span style=\"line-height: 28px;font-size: 20px\">比赛列表</span>\n          </div>\n          <el-table :data=\"data\" fit :current-row-key=\"data.contestId\">\n            <el-table-column prop=\"contestTitle\" label=\"比赛名称\" align=\"center\"></el-table-column>\n            <el-table-column prop=\"number\" label=\"报名人数\" width=\"200%\" align=\"center\"></el-table-column>\n            <el-table-column fixed=\"right\" label=\"操作\" width=\"200%\" align=\"center\">\n              <template v-slot=\"scope\">\n                <el-button type=\"text\" size=\"small\"\n                           @click=\"$router.push({name: 'publish-message', params: {\n                             contestId: scope.row.contestId,\n                             contestTitle:scope.row.contestTitle\n                           }})\">发送消息\n                </el-button>\n                <el-button type=\"text\" size=\"small\"\n                           @click=\"$router.push({name: 'publish-competition', params: {\n                             contestId: scope.row.contestId\n                           }})\">修改比赛\n                </el-button>\n              </template>\n            </el-table-column>\n          </el-table>\n        </el-card>\n      </el-col>\n    </el-row>\n  </div>\n</template>\n\n<script>\nimport {getRequest} from \"@/utils/api\";\n\nexport default {\n  name: \"MessageOrScore\",\n  data() {\n    return {\n      data: [],\n    }\n  },\n  computed: {\n    isLogin() {\n      console.log(\"执行了\")\n      return this.$store.state.gid;\n    }\n  },\n  watch: {\n    isLogin() {\n      this.getContests();\n    }\n\n  },\n  methods: {\n    getContests() {\n      getRequest(\"/contests/gid\", {gid: this.$store.state.gid}).then((res) => {\n        this.data = res.data.data;\n      })\n    }\n  }\n}\n</script>\n\n<style scoped>\n\n</style>"]}]}