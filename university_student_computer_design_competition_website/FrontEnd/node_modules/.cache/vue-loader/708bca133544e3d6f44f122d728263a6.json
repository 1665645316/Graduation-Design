{"remainingRequest":"/Volumes/Code/Graduation_Design/university_student_computer_design_competition_website/FrontEnd/node_modules/vue-loader/lib/index.js??vue-loader-options!/Volumes/Code/Graduation_Design/university_student_computer_design_competition_website/FrontEnd/src/views/layout/Find/Result.vue?vue&type=style&index=0&id=3036ab30&scoped=true&lang=css&","dependencies":[{"path":"/Volumes/Code/Graduation_Design/university_student_computer_design_competition_website/FrontEnd/src/views/layout/Find/Result.vue","mtime":1644479850320},{"path":"/Volumes/Code/Graduation_Design/university_student_computer_design_competition_website/FrontEnd/node_modules/css-loader/dist/cjs.js","mtime":1642048410000},{"path":"/Volumes/Code/Graduation_Design/university_student_computer_design_competition_website/FrontEnd/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":1642048410000},{"path":"/Volumes/Code/Graduation_Design/university_student_computer_design_competition_website/FrontEnd/node_modules/postcss-loader/src/index.js","mtime":1642048410000},{"path":"/Volumes/Code/Graduation_Design/university_student_computer_design_competition_website/FrontEnd/node_modules/cache-loader/dist/cjs.js","mtime":1642048410000},{"path":"/Volumes/Code/Graduation_Design/university_student_computer_design_competition_website/FrontEnd/node_modules/vue-loader/lib/index.js","mtime":1642048410000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKdGV4dCB7CiAgdGV4dC1hbGlnbjogY2VudGVyOwp9Cg=="},{"version":3,"sources":["Result.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAqEA;AACA;AACA","file":"Result.vue","sourceRoot":"src/views/layout/Find","sourcesContent":["<template>\n  <div>\n    <el-row :gutter=\"20\">\n      <el-col :span=\"10\" :offset=\"7\">\n        <el-card>\n          <el-descriptions :column=\"3\" :title=\"contestTitle\" border>\n            <el-descriptions-item label=\"比赛人\" >{{ contestant }}\n            </el-descriptions-item>\n            <el-descriptions-item label=\"评分人\" >{{ judge }}\n            </el-descriptions-item>\n            <el-descriptions-item label=\"比赛排名\" >{{ ranking }}\n            </el-descriptions-item>\n            <el-descriptions-item label=\"评语\">{{ text }}</el-descriptions-item>\n          </el-descriptions>\n          <div style=\"text-align: center;font-size: 30px;font-weight: bold;margin-bottom: 20px;\">\n            分数：{{ result }}\n          </div>\n        </el-card>\n      </el-col>\n    </el-row>\n  </div>\n</template>\n\n<script>\nimport {getRequest} from \"@/utils/api\";\n\nexport default {\n  name: \"Result\",\n  data() {\n    return {\n      scoresId: 0,\n      contestId: 0,\n      contestant: \"\",\n      judge: \"\",\n      ranking: 0,\n      result: 0,\n      contestTitle: '',\n      text: \"\"\n    }\n  },\n  mounted() {\n    const id = this.$route.params.scoresId\n    if (id) {\n      getRequest(\"/scores/\" + id).then((res) => {\n        let data = res.data.data\n        console.log(data);\n        if (data) {\n          this.contestId = data.contestId;\n          this.contestTitle = data.contestTitle;\n          this.contestant = data.contestant;\n          this.judge = data.judge;\n          this.ranking = data.ranking;\n          this.result = data.result;\n          this.text = data.text;\n          this.contestTitle = data.contestTitle;\n\n        } else {\n          this.$message.info(\"此比赛暂无结果。\")\n        }\n      })\n    } else {\n      this.$message.error(\"查询比赛结果失败！！！\");\n      this.$router.go(-1);\n    }\n  }\n}\n</script>\n\n<style scoped>\ntext {\n  text-align: center;\n}\n</style>"]}]}