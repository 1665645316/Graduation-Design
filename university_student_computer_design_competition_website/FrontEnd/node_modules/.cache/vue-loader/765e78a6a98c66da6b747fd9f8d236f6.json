{"remainingRequest":"/Volumes/Code/Graduation_Design/university_student_computer_design_competition_website/FrontEnd/node_modules/vue-loader/lib/index.js??vue-loader-options!/Volumes/Code/Graduation_Design/university_student_computer_design_competition_website/FrontEnd/src/views/Admin/Main/Groups/index.vue?vue&type=style&index=0&id=0a324a3a&lang=less&scoped=true&","dependencies":[{"path":"/Volumes/Code/Graduation_Design/university_student_computer_design_competition_website/FrontEnd/src/views/Admin/Main/Groups/index.vue","mtime":1646828708930},{"path":"/Volumes/Code/Graduation_Design/university_student_computer_design_competition_website/FrontEnd/node_modules/css-loader/dist/cjs.js","mtime":1642048410000},{"path":"/Volumes/Code/Graduation_Design/university_student_computer_design_competition_website/FrontEnd/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":1642048410000},{"path":"/Volumes/Code/Graduation_Design/university_student_computer_design_competition_website/FrontEnd/node_modules/postcss-loader/src/index.js","mtime":1642048410000},{"path":"/Volumes/Code/Graduation_Design/university_student_computer_design_competition_website/FrontEnd/node_modules/less-loader/dist/cjs.js","mtime":1642232388000},{"path":"/Volumes/Code/Graduation_Design/university_student_computer_design_competition_website/FrontEnd/node_modules/cache-loader/dist/cjs.js","mtime":1642048410000},{"path":"/Volumes/Code/Graduation_Design/university_student_computer_design_competition_website/FrontEnd/node_modules/vue-loader/lib/index.js","mtime":1642048410000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKLmJveCB7CiAgbWFyZ2luLWJvdHRvbTogMjBweDsKfQoKLmJveC1pbnB1dCB7CiAgd2lkdGg6IDIwMHB4OwogIGRpc3BsYXk6IGlubGluZS1ibG9jazsKfQoKLm1yMjAgewogIG1hcmdpbi1yaWdodDogMjBweDsKfQo="},{"version":3,"sources":["index.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAyJA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA","file":"index.vue","sourceRoot":"src/views/Admin/Main/Groups","sourcesContent":["<template>\n  <div>\n    <div class=\"box\">\n      <el-button type=\"danger\" icon=\"fa fa-trash-can\" class=\"mr20\" size=\"mini\"\n                 :disabled=\"deleteButton\" @click=\"deleteGroups\">批量删除\n      </el-button>\n      <el-button type=\"primary\" icon=\"fa fa-plus\" size=\"mini\" class=\"mr20\" @click=\"insertOrUpdate()\">添加</el-button>\n      <el-input v-model=\"input\" placeholder=\"请输入搜索值\" class=\"box-input mr20\" size=\"mini\" clearable></el-input>\n      <el-button type=\"primary\" icon=\"fa fa-magnifying-glass\" size=\"mini\" :disabled=\"searchButton\"\n                 @click=\"searchGroups\">搜索\n      </el-button>\n    </div>\n    <el-table :data=\"tableData\" border fit @selection-change=\"handleSelectionChange\">\n      <el-table-column type=\"selection\" hidden></el-table-column>\n      <el-table-column prop=\"groupId\" label=\"ID\" width=\"100%\" align=\"center\"></el-table-column>\n      <el-table-column prop=\"groupName\" label=\"组名称\" width=\"100%\" align=\"center\"></el-table-column>\n      <el-table-column prop=\"encoding\" label=\"组编码\" align=\"center\"></el-table-column>\n      <el-table-column prop=\"number\" label=\"人数\" align=\"center\"></el-table-column>\n      <el-table-column label=\"操作\">\n        <template v-slot=\"scope\">\n          <el-button type=\"warning\" size=\"mini\" @click=\"insertOrUpdate(scope.row)\" round>编辑</el-button>\n        </template>\n      </el-table-column>\n    </el-table>\n\n    <el-dialog :title=\"groupTitle\" :visible.sync=\"dialog\" width=\"20%\">\n      <el-form :model=\"group\" :rules=\"groupRules\" ref=\"group\">\n        <el-form-item label=\"组名称\" prop=\"groupName\">\n          <el-input v-model=\"group.groupName\" autocomplete=\"off\" maxlength=\"10\" show-word-limit></el-input>\n        </el-form-item>\n        <el-form-item label=\"组编码\" prop=\"encoding\">\n          <el-input v-model=\"group.encoding\" autocomplete=\"off\" maxlength=\"5\" show-word-limit\n                    @blur=\"group.encoding = group.encoding.replace(/\\s*/g,'').toUpperCase()\">\n          </el-input>\n        </el-form-item>\n      </el-form>\n      <div slot=\"footer\" class=\"dialog-footer\">\n        <el-button @click=\"dialog = false\">取 消</el-button>\n        <el-button v-if=\"groupTitle==='添加用户组'\" type=\"primary\" @click=\"insertGroups\">添 加</el-button>\n        <el-button v-else type=\"primary\" @click=\"updateGroup\">修 改</el-button>\n      </div>\n    </el-dialog>\n  </div>\n</template>\n\n<script>\nimport {getRequest, postRequest, putRequest} from \"@/utils/api\";\n\nexport default {\n  name: \"Groups\",\n  data() {\n    return {\n      input: '',\n      dialog: false,\n      multipleSelection: [],\n      tableData: [],\n      groupTitle: '',\n      group: {\n        groupName: '',\n        encoding: ''\n      },\n      groupRules: {\n        groupName: [{required: true, message: \"名称不能为空\", trigger: \"blur\"},\n          {pattern: /^[\\u4e00-\\u9fa5_a-zA-Z\\d]{1,10}$/, message: \"请输入1-10位字符\"}],\n        encoding: [{required: true, message: \"编码不能为空\", trigger: \"blur\"},\n          {pattern: /^[\\da-zA-Z]{5}$/, message: \"请输入五位字母或数字组合字符\"}]\n      }\n    }\n  },\n  computed: {\n    deleteButton() {\n      return !this.multipleSelection.length;\n    },\n    searchButton() {\n      return !this.input;\n    }\n  },\n  watch: {\n    input(newValue) {\n      if (newValue.trim() === \"\") {\n        this.selectGroupsList();\n      }\n    }\n  },\n  methods: {\n    selectGroupsList() {\n      getRequest(\"/selectGroupsList\").then(res => {\n        this.tableData = res.data.data;\n      })\n    },\n    handleSelectionChange(val) {\n      this.multipleSelection = val;\n    },\n    deleteGroups() {\n      postRequest(\"/deleteGroups\", this.multipleSelection).then(res => {\n        if (res.data.data) {\n          this.$message.success(\"删除成功。\");\n          this.selectGroupsList();\n        } else this.$message.error(\"删除失败，因为组下有用户。\");\n      })\n    },\n    searchGroups() {\n      console.log(this.input.trim())\n      getRequest(\"/searchGroups\", {query: this.input.trim()}).then(res => {\n        this.tableData = res.data.data;\n      })\n    },\n    insertOrUpdate(data) {\n      if (data === undefined) {\n        this.groupTitle = '添加用户组';\n        this.group = {};\n      } else {\n        this.groupTitle = '修改用户组';\n        this.group.groupId = data.groupId;\n        this.group.groupName = data.groupName;\n        this.group.encoding = data.encoding;\n      }\n      this.dialog = true;\n    },\n    insertGroups() {\n      this.$refs.group.validate((valid) => {\n        if (valid) {\n          postRequest(\"/insertGroup\", this.group).then(res => {\n            if (res.data.code === 200) {\n              this.$message.success(res.data.msg);\n              this.selectGroupsList();\n            } else this.$message.error(res.data.msg);\n          });\n        }\n        this.dialog = false;\n      })\n    },\n    updateGroup() {\n      this.$refs.group.validate((valid) => {\n        if (valid) {\n          putRequest(\"/updateGroup\", this.group).then(res => {\n            if (res.data.data) {\n              this.$message.success(\"修改成功。\");\n              this.selectGroupsList();\n            } else this.$message.error(\"修改失败！\");\n          });\n        }\n        this.dialog = false;\n      })\n    }\n  },\n  mounted() {\n    this.selectGroupsList();\n  }\n}\n</script>\n\n<style lang=\"less\" scoped>\n.box {\n  margin-bottom: 20px;\n}\n\n.box-input {\n  width: 200px;\n  display: inline-block;\n}\n\n.mr20 {\n  margin-right: 20px;\n}\n</style>"]}]}