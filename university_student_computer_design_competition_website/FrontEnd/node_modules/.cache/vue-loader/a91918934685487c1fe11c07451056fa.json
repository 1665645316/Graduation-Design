{"remainingRequest":"/Volumes/Code/Graduation_Design/university_student_computer_design_competition_website/FrontEnd/node_modules/vue-loader/lib/index.js??vue-loader-options!/Volumes/Code/Graduation_Design/university_student_computer_design_competition_website/FrontEnd/src/views/layout/Main/Management/Score/index.vue?vue&type=style&index=0&id=00044d74&lang=less&scoped=true&","dependencies":[{"path":"/Volumes/Code/Graduation_Design/university_student_computer_design_competition_website/FrontEnd/src/views/layout/Main/Management/Score/index.vue","mtime":1646135594470},{"path":"/Volumes/Code/Graduation_Design/university_student_computer_design_competition_website/FrontEnd/node_modules/css-loader/dist/cjs.js","mtime":1642048410000},{"path":"/Volumes/Code/Graduation_Design/university_student_computer_design_competition_website/FrontEnd/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":1642048410000},{"path":"/Volumes/Code/Graduation_Design/university_student_computer_design_competition_website/FrontEnd/node_modules/postcss-loader/src/index.js","mtime":1642048410000},{"path":"/Volumes/Code/Graduation_Design/university_student_computer_design_competition_website/FrontEnd/node_modules/less-loader/dist/cjs.js","mtime":1642232388000},{"path":"/Volumes/Code/Graduation_Design/university_student_computer_design_competition_website/FrontEnd/node_modules/cache-loader/dist/cjs.js","mtime":1642048410000},{"path":"/Volumes/Code/Graduation_Design/university_student_computer_design_competition_website/FrontEnd/node_modules/vue-loader/lib/index.js","mtime":1642048410000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKaW5wdXQsIHRleHRhcmVhIHsKICBib3JkZXI6IG5vbmU7CiAgb3V0bGluZTogbm9uZTsKICBiYWNrZ3JvdW5kLWNvbG9yOiAjZmZmOwogIHJlc2l6ZTogbm9uZTsKfQo="},{"version":3,"sources":["index.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA4JA;AACA;AACA;AACA;AACA;AACA","file":"index.vue","sourceRoot":"src/views/layout/Main/Management/Score","sourcesContent":["<template>\n  <div style=\"margin-top: 10%;\">\n    <el-row :gutter=\"20\">\n      <el-col :span=\"10\" :offset=\"7\">\n        <el-card>\n          <div slot=\"header\" class=\"clearfix\">\n            <span style=\"line-height: 28px;font-size: 20px\">{{ this.data.contestTitle }}</span>\n            <el-button style=\"float: right\" size=\"mini\" type=\"primary\" round\n                       @click=\"$router.push({name: 'management-message', params: {contestId:data.contestId,contestTitle:data.contestTitle}})\">\n              返回\n            </el-button>\n          </div>\n\n          <el-descriptions title=\"评审信息\" border :contentStyle=\"{'text-align': 'center'}\"\n                           :labelStyle=\"{'text-align': 'center'}\">\n            <el-descriptions-item label=\"用户名\">{{ data.name }}</el-descriptions-item>\n            <el-descriptions-item label=\"评审人\">{{ data.judge }}</el-descriptions-item>\n            <el-descriptions-item label=\"排名\">{{ data.ranking }}</el-descriptions-item>\n            <el-descriptions-item label=\"手机号\">{{ data.phone }}</el-descriptions-item>\n\n            <el-descriptions-item label=\"学校\">\n              <el-tag size=\"small\">{{ data.school }}</el-tag>\n            </el-descriptions-item>\n            <el-descriptions-item label=\"得分\">\n              <input :disabled=\"inputDisabled\" v-model=\"data.result\" maxlength=\"3\"\n                     onkeyup=\"value=value.replace(/[^\\d]/g,'')\"\n                     style=\"width: 30px;text-align: center\"></input>\n            </el-descriptions-item>\n            <el-descriptions-item label=\"评语\">\n              <textarea :disabled=\"inputDisabled\" v-model=\"data.text\" style=\"width: 100%;\"></textarea>\n            </el-descriptions-item>\n          </el-descriptions>\n          <div style=\"float: right;margin: 20px 0\">\n            <template v-if=\"inputDisabled\">\n              <el-button type=\"warning\" round @click=\"scoreModify\">修改</el-button>\n            </template>\n            <template v-else>\n              <el-button type=\"success\" round @click=\"scoreReview\">评审</el-button>\n              <el-button type=\"danger\" round @click=\"inputDisabled = !inputDisabled\">取消</el-button>\n            </template>\n          </div>\n        </el-card>\n      </el-col>\n    </el-row>\n  </div>\n</template>\n\n<script>\nimport {getRequest, postRequest, putRequest} from \"@/utils/api\";\n\nexport default {\n  name: \"Score\",\n  data() {\n    return {\n      inputDisabled: true,\n      data: {\n        contestTitle: '',\n        scoresId: '',\n        name: '',\n        phone: '',\n        school: '',\n        state: '',\n        ranking: '',\n        judge: '',\n        result: '',\n        text: '',\n        userId: ''\n      },\n      submitData: {\n        scoresId: '',\n        judge: '',\n        result: '',\n        state: true,\n        text: ''\n      }\n    }\n  },\n  mounted() {\n    this.data = this.$route.params;\n    this.scoreLoading(this.data.scoresId);\n    // getRequest(\"/contests/gid\", {gid: sessionStorage.gid}).then((res) => {\n    //   this.data = res.data.data;\n    //   console.log(this.data)\n    // })\n  },\n  methods: {\n    // 加载\n    scoreLoading(id) {\n      // 根据id查询\n      if (this.data.state) {\n        getRequest(\"/scores/\" + id).then((res) => {\n          const data = res.data.data;\n          this.$set(this.data, 'ranking', data.ranking === undefined ? '未知' : data.ranking);\n          this.$set(this.data, 'judge', data.judge);\n          this.$set(this.data, 'result', data.result);\n          this.$set(this.data, 'text', data.text);\n        })\n      } else {\n        this.inputDisabled = false;\n        this.data.judge = this.data.ranking = '暂无';\n      }\n    },\n    // 修改\n    scoreModify() {\n      this.inputDisabled = !this.inputDisabled;\n    },\n    // 评审\n    scoreReview() {\n      let result = parseInt(this.data.result);\n      if (result > 100 || result < 1 || isNaN(result)) {\n        this.$message.error('分数只能在0-100之间！')\n      } else if (this.data.text === undefined) {\n        this.$message.error('评语不能为空！')\n      } else {\n        this.submitData.scoresId = this.data.scoresId;\n        this.submitData.judge = Number(this.$store.state.uid);\n        this.submitData.result = result;\n        this.submitData.text = this.data.text;\n        this.inputDisabled = !this.inputDisabled;\n        // 修改数据\n        putRequest(\"/scores/update\",this.submitData).then((res) => {\n          if (res.data.data) {\n            this.$message.success(\"评审成功。\")\n            // 发送通知\n            this.message();\n            this.data.state = true;\n            this.scoreLoading(this.data.scoresId);\n          } else {\n            this.$message.error(\"评审失败！\")\n          }\n        })\n      }\n    },\n    message() {\n      let title = '';\n      let text = '';\n      if (this.data.state) {\n        title = '比赛结果改动通知';\n        text = '您报名的比赛：《' + this.data.contestTitle + '》结果已修改。';\n      } else {\n        title = '比赛评审完成通知';\n        text = '恭喜您报名的比赛：《' + this.data.contestTitle + '》已经评审完成。';\n      }\n      const obj = {\n        recipient: this.data.userId,\n        title: title,\n        text: text,\n        sender: Number(this.$store.state.uid)\n      };\n      postRequest(\"/messages/insert\", obj);\n    }\n  }\n}\n</script>\n\n<style lang=\"less\" scoped>\ninput, textarea {\n  border: none;\n  outline: none;\n  background-color: #fff;\n  resize: none;\n}\n</style>"]}]}