{"remainingRequest":"/Volumes/Code/Graduation_Design/university_student_computer_design_competition_website/FrontEnd/node_modules/vue-loader/lib/index.js??vue-loader-options!/Volumes/Code/Graduation_Design/university_student_computer_design_competition_website/FrontEnd/src/views/layout/Main/Publish/Message/index.vue?vue&type=style&index=0&id=7182baa2&lang=less&scoped=true&","dependencies":[{"path":"/Volumes/Code/Graduation_Design/university_student_computer_design_competition_website/FrontEnd/src/views/layout/Main/Publish/Message/index.vue","mtime":1644826569940},{"path":"/Volumes/Code/Graduation_Design/university_student_computer_design_competition_website/FrontEnd/node_modules/css-loader/dist/cjs.js","mtime":1642048410000},{"path":"/Volumes/Code/Graduation_Design/university_student_computer_design_competition_website/FrontEnd/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":1642048410000},{"path":"/Volumes/Code/Graduation_Design/university_student_computer_design_competition_website/FrontEnd/node_modules/postcss-loader/src/index.js","mtime":1642048410000},{"path":"/Volumes/Code/Graduation_Design/university_student_computer_design_competition_website/FrontEnd/node_modules/less-loader/dist/cjs.js","mtime":1642232388000},{"path":"/Volumes/Code/Graduation_Design/university_student_computer_design_competition_website/FrontEnd/node_modules/cache-loader/dist/cjs.js","mtime":1642048410000},{"path":"/Volumes/Code/Graduation_Design/university_student_computer_design_competition_website/FrontEnd/node_modules/vue-loader/lib/index.js","mtime":1642048410000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgouZmFkZS1lbnRlci1hY3RpdmUsIC5mYWRlLWxlYXZlLWFjdGl2ZSB7CiAgdHJhbnNpdGlvbjogb3BhY2l0eSAwLjVzOwp9CgouZmFkZS1lbnRlciwgLmZhZGUtbGVhdmUtdG8gewogIG9wYWNpdHk6IDA7Cn0K"},{"version":3,"sources":["index.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAoEA;AACA;AACA;;AAEA;AACA;AACA","file":"index.vue","sourceRoot":"src/views/layout/Main/Publish/Message","sourcesContent":["<template>\n  <div>\n    <el-row :gutter=\"20\">\n      <el-col :span=\"16\" :offset=\"4\" style=\"position:relative;\">\n        <transition-group name=\"fade\" mode=\"out-in\">\n          <div v-show=\"show\" class=\"transition-box\" key=\"1\" style=\"position:absolute;width: 100%;\">\n            <el-card>\n              <div slot=\"header\" class=\"clearfix\">\n                <span>选择一个比赛</span>\n              </div>\n              <el-table :data=\"data\" fit @row-click=\"clickContestsTable\" :current-row-key=\"data.contestId\">\n                <el-table-column prop=\"contestTitle\" label=\"比赛名称\" align=\"center\"></el-table-column>\n                <el-table-column prop=\"number\" label=\"报名人数\" align=\"center\"></el-table-column>\n              </el-table>\n            </el-card>\n          </div>\n\n          <div v-show=\"!show\" class=\"transition-box\" key=\"2\" style=\"position:absolute;width: 100%;\">\n            <el-card>\n              <div slot=\"header\" class=\"clearfix\">\n                <span style=\"line-height: 28px;font-size: 20px\">选择需要发送消息的对象</span>\n                <el-button style=\"float: right\" size=\"mini\" type=\"primary\" round @click=\"show=!show\">返回</el-button>\n              </div>\n              <el-table :data=\"data\" fit @row-click=\"clickScoresTable\" :current-row-key=\"data.contestId\">\n                <el-table-column type=\"selection\"></el-table-column>\n                <el-table-column prop=\"contestTitle\" label=\"姓名\" align=\"center\"></el-table-column>\n                <el-table-column prop=\"contestTitle\" label=\"学校\" align=\"center\"></el-table-column>\n              </el-table>\n            </el-card>\n          </div>\n        </transition-group>\n      </el-col>\n    </el-row>\n  </div>\n</template>\n\n<script>\nimport {getRequest} from \"@/utils/api\";\n\nexport default {\n  name: \"index\",\n  data() {\n    return {\n      show: true,\n      data: [],\n      dataUser: [],\n    }\n  },\n  mounted() {\n    getRequest(\"/contests/gid\", {gid: sessionStorage.gid}).then((res) => {\n      this.data = res.data.data;\n      console.log(this.data)\n    })\n  },\n  methods: {\n    clickContestsTable(row) {\n      this.show = !this.show;\n      console.log(row.contestId)\n    },\n    clickScoresTable(row) {\n      this.show = !this.show;\n      console.log(row.contestId)\n    }\n  }\n}\n</script>\n\n<style lang=\"less\" scoped>\n.fade-enter-active, .fade-leave-active {\n  transition: opacity 0.5s;\n}\n\n.fade-enter, .fade-leave-to {\n  opacity: 0;\n}\n</style>"]}]}