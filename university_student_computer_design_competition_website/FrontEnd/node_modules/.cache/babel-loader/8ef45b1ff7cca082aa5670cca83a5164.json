{"remainingRequest":"G:\\Graduation_Design\\university_student_computer_design_competition_website\\FrontEnd\\node_modules\\thread-loader\\dist\\cjs.js!G:\\Graduation_Design\\university_student_computer_design_competition_website\\FrontEnd\\node_modules\\babel-loader\\lib\\index.js!G:\\Graduation_Design\\university_student_computer_design_competition_website\\FrontEnd\\node_modules\\cache-loader\\dist\\cjs.js??ref--1-0!G:\\Graduation_Design\\university_student_computer_design_competition_website\\FrontEnd\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!G:\\Graduation_Design\\university_student_computer_design_competition_website\\FrontEnd\\src\\views\\layout\\Main\\Management\\index.vue?vue&type=script&lang=js&","dependencies":[{"path":"G:\\Graduation_Design\\university_student_computer_design_competition_website\\FrontEnd\\src\\views\\layout\\Main\\Management\\index.vue","mtime":1646138737310},{"path":"G:\\Graduation_Design\\university_student_computer_design_competition_website\\FrontEnd\\babel.config.js","mtime":1642426402000},{"path":"G:\\Graduation_Design\\university_student_computer_design_competition_website\\FrontEnd\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1642048410000},{"path":"G:\\Graduation_Design\\university_student_computer_design_competition_website\\FrontEnd\\node_modules\\thread-loader\\dist\\cjs.js","mtime":1642048410000},{"path":"G:\\Graduation_Design\\university_student_computer_design_competition_website\\FrontEnd\\node_modules\\babel-loader\\lib\\index.js","mtime":1642048410000},{"path":"G:\\Graduation_Design\\university_student_computer_design_competition_website\\FrontEnd\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1642048410000},{"path":"G:\\Graduation_Design\\university_student_computer_design_competition_website\\FrontEnd\\node_modules\\vue-loader\\lib\\index.js","mtime":1642048410000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KaW1wb3J0IHsgZ2V0UmVxdWVzdCB9IGZyb20gIkAvdXRpbHMvYXBpIjsKZXhwb3J0IGRlZmF1bHQgewogIG5hbWU6ICJNZXNzYWdlT3JTY29yZSIsCiAgZGF0YTogZnVuY3Rpb24gZGF0YSgpIHsKICAgIHJldHVybiB7CiAgICAgIGRhdGE6IFtdCiAgICB9OwogIH0sCiAgd2F0Y2g6IHsKICAgICIkc3RvcmUuc3RhdGUuaXNMb2dpbiI6IGZ1bmN0aW9uICRzdG9yZVN0YXRlSXNMb2dpbigpIHsKICAgICAgdGhpcy5pc1N0dWRlbnQoKTsKICAgICAgdGhpcy5nZXRDb250ZXN0cygpOwogICAgfQogIH0sCiAgbWV0aG9kczogewogICAgaXNTdHVkZW50OiBmdW5jdGlvbiBpc1N0dWRlbnQoKSB7CiAgICAgIGlmICh0aGlzLiRzdG9yZS5zdGF0ZS5naWQgPT09IDIpIHsKICAgICAgICB0aGlzLiRtZXNzYWdlLndhcm5pbmcoIuatpOWKn+iDveaaguacquWvueWtpueUn+W8gOWPke+8gSIpOwogICAgICAgIHRoaXMuJHJvdXRlci5nbygtMSk7CiAgICAgIH0KICAgIH0sCiAgICBnZXRDb250ZXN0czogZnVuY3Rpb24gZ2V0Q29udGVzdHMoKSB7CiAgICAgIHZhciBfdGhpcyA9IHRoaXM7CgogICAgICBnZXRSZXF1ZXN0KCIvY29udGVzdHMvZ2lkIiwgewogICAgICAgIGdpZDogdGhpcy4kc3RvcmUuc3RhdGUuZ2lkCiAgICAgIH0pLnRoZW4oZnVuY3Rpb24gKHJlcykgewogICAgICAgIF90aGlzLmRhdGEgPSByZXMuZGF0YS5kYXRhOwogICAgICB9KTsKICAgIH0KICB9LAogIG1vdW50ZWQ6IGZ1bmN0aW9uIG1vdW50ZWQoKSB7CiAgICBpZiAodGhpcy4kc3RvcmUuc3RhdGUuaXNMb2dpbikgewogICAgICB0aGlzLmlzU3R1ZGVudCgpOwogICAgICB0aGlzLmdldENvbnRlc3RzKCk7CiAgICB9CiAgfQp9Ow=="},{"version":3,"sources":["index.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAmCA,SAAA,UAAA,QAAA,aAAA;AAEA,eAAA;AACA,EAAA,IAAA,EAAA,gBADA;AAEA,EAAA,IAFA,kBAEA;AACA,WAAA;AACA,MAAA,IAAA,EAAA;AADA,KAAA;AAGA,GANA;AAOA,EAAA,KAAA,EAAA;AACA,0BADA,gCACA;AACA,WAAA,SAAA;AACA,WAAA,WAAA;AACA;AAJA,GAPA;AAaA,EAAA,OAAA,EAAA;AACA,IAAA,SADA,uBACA;AACA,UAAA,KAAA,MAAA,CAAA,KAAA,CAAA,GAAA,KAAA,CAAA,EAAA;AACA,aAAA,QAAA,CAAA,OAAA,CAAA,aAAA;AACA,aAAA,OAAA,CAAA,EAAA,CAAA,CAAA,CAAA;AACA;AACA,KANA;AAOA,IAAA,WAPA,yBAOA;AAAA;;AACA,MAAA,UAAA,CAAA,eAAA,EAAA;AAAA,QAAA,GAAA,EAAA,KAAA,MAAA,CAAA,KAAA,CAAA;AAAA,OAAA,CAAA,CAAA,IAAA,CAAA,UAAA,GAAA,EAAA;AACA,QAAA,KAAA,CAAA,IAAA,GAAA,GAAA,CAAA,IAAA,CAAA,IAAA;AACA,OAFA;AAGA;AAXA,GAbA;AA0BA,EAAA,OA1BA,qBA0BA;AACA,QAAA,KAAA,MAAA,CAAA,KAAA,CAAA,OAAA,EAAA;AACA,WAAA,SAAA;AACA,WAAA,WAAA;AACA;AACA;AA/BA,CAAA","sourcesContent":["<template>\n  <div>\n    <el-row :gutter=\"20\">\n      <el-col :span=\"16\" :offset=\"4\">\n        <el-card>\n          <div slot=\"header\" class=\"clearfix\">\n            <span style=\"line-height: 28px;font-size: 20px\">比赛列表</span>\n            <el-button @click=\"$router.push('/management/competition')\" type=\"primary\" round style=\"float: right;\" size=\"mini\">添加比赛</el-button>\n          </div>\n          <el-table :data=\"data\" fit :current-row-key=\"data.contestId\">\n            <el-table-column prop=\"contestTitle\" label=\"比赛名称\" align=\"center\"></el-table-column>\n            <el-table-column prop=\"number\" label=\"报名人数\" width=\"200%\" align=\"center\"></el-table-column>\n            <el-table-column fixed=\"right\" label=\"操作\" width=\"200%\" align=\"center\">\n              <template v-slot=\"scope\">\n                <el-button type=\"text\" size=\"small\"\n                           @click=\"$router.push({name: 'management-message', params: {\n                             contestId: scope.row.contestId,\n                             contestTitle:scope.row.contestTitle\n                           }})\">发送消息\n                </el-button>\n                <el-button type=\"text\" size=\"small\"\n                           @click=\"$router.push({name: 'management-competition', params: {\n                             contestId: scope.row.contestId\n                           }})\">修改比赛\n                </el-button>\n              </template>\n            </el-table-column>\n          </el-table>\n        </el-card>\n      </el-col>\n    </el-row>\n  </div>\n</template>\n\n<script>\nimport {getRequest} from \"@/utils/api\";\n\nexport default {\n  name: \"MessageOrScore\",\n  data() {\n    return {\n      data: [],\n    }\n  },\n  watch: {\n    \"$store.state.isLogin\"() {\n      this.isStudent();\n      this.getContests();\n    }\n  },\n  methods: {\n    isStudent() {\n      if (this.$store.state.gid === 2) {\n        this.$message.warning(\"此功能暂未对学生开发！\");\n        this.$router.go(-1);\n      }\n    },\n    getContests() {\n      getRequest(\"/contests/gid\", {gid: this.$store.state.gid}).then((res) => {\n        this.data = res.data.data;\n      })\n    }\n  },\n  mounted() {\n    if (this.$store.state.isLogin) {\n      this.isStudent();\n      this.getContests();\n    }\n  }\n}\n</script>\n\n<style scoped>\n\n</style>"],"sourceRoot":"src/views/layout/Main/Management"}]}